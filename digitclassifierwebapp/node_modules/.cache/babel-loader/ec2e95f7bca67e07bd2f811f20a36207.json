{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arahman\\\\Documents\\\\Personal Projects\\\\DigitClassifierWeb\\\\digitclassifierwebapp\\\\src\\\\Components\\\\Canvas.jsx\";\nimport React, { Component } from 'react';\nimport CanvasDraw from \"react-canvas-draw\";\nimport imageSrc from \"./imgSrc/black_bg.jpg\";\nexport default class Canvas extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      brushColor: \"rgb(255,255,255)\",\n      width: 500,\n      height: 500,\n      brushRadius: 10,\n      lazyRadius: 12,\n      result: 0,\n      accuracy: 0.0\n    };\n    this.style = {\n      fontSize: 20,\n      width: 100\n    };\n  }\n\n  RenderBrushSize() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tools\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"Brush-Radius:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.brushRadius,\n      onChange: e => this.setState({\n        brushRadius: parseInt(e.target.value, 10)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  RenderButtons() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: this.style,\n      className: \"btn btn-primary\",\n      onClick: () => {\n        localStorage.setItem(\"savedDrawing\", //this.saveableCanvas.getSaveData(),\n        this.ProcessDrawing());\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \" Save \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: this.style,\n      className: \"btn btn-primary\",\n      onClick: () => {\n        this.saveableCanvas.clear();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \" Clear \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: this.style,\n      className: \"btn btn-primary\",\n      onClick: () => {\n        this.saveableCanvas.undo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \" Undo \")));\n  }\n\n  RenderCanvas() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"left\",\n      width: this.state.width,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CanvasDraw, {\n      ref: canvasDraw => this.saveableCanvas = canvasDraw,\n      brushColor: this.state.brushColor,\n      imgSrc: imageSrc,\n      brushRadius: this.state.brushRadius,\n      lazyRadius: this.state.lazyRadius,\n      canvasWidth: this.state.width,\n      canvasHeight: this.state.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  RenderResults() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"Result: \", this.state.result), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Accuracy: \", this.state.accuracy, \"%\"));\n  }\n\n  ProcessDrawing() {\n    //Process the drawing to back end and return output\n    const imageUri = this.saveableCanvas.canvasContainer.children[1].toDataURL(\"image/png\");\n\n    if (imageUri) {\n      const url = \"http://localhost:5000/process_image\";\n      fetch(url, {\n        method: \"POST\",\n        cache: \"no-store\",\n        headers: {\n          'Accept': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n          'Access-Control-Request-Method': 'GET, POST, DELETE, PUT, OPTIONS'\n        },\n        body: JSON.stringify(imageUri)\n      }).then(response => {\n        console.log(response);\n        return response.json();\n      }).then(contents => {\n        console.log(contents);\n      }); //.catch(() => console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser?\"))\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, this.RenderBrushSize(), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, this.RenderCanvas(), this.RenderButtons(), this.RenderResults()));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/arahman/Documents/Personal Projects/DigitClassifierWeb/digitclassifierwebapp/src/Components/Canvas.jsx"],"names":["React","Component","CanvasDraw","imageSrc","Canvas","state","brushColor","width","height","brushRadius","lazyRadius","result","accuracy","style","fontSize","RenderBrushSize","e","setState","parseInt","target","value","RenderButtons","localStorage","setItem","ProcessDrawing","saveableCanvas","clear","undo","RenderCanvas","canvasDraw","RenderResults","imageUri","canvasContainer","children","toDataURL","url","fetch","method","cache","headers","body","JSON","stringify","then","response","console","log","json","contents","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport imageSrc from \"./imgSrc/black_bg.jpg\";\r\n\r\nexport default class Canvas extends Component {\r\n    \r\n    state = {\r\n        brushColor:\"rgb(255,255,255)\",\r\n        width: 500,\r\n        height: 500,\r\n        brushRadius: 10,\r\n        lazyRadius: 12,\r\n        result: 0,\r\n        accuracy: 0.0\r\n    };\r\n\r\n    style = {\r\n        fontSize: 20,\r\n        width: 100\r\n    }\r\n\r\n    RenderBrushSize(){\r\n        return (\r\n            <div className=\"tools\">\r\n                <label>Brush-Radius:</label>\r\n                    <input\r\n                    type=\"number\"\r\n                    value={this.state.brushRadius}\r\n                    onChange={e =>\r\n                        this.setState({ brushRadius: parseInt(e.target.value, 10) })\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    RenderButtons(){\r\n        return (\r\n            <div id=\"middle\">\r\n                <div className=\"button-padding\">\r\n                    <button style={this.style} className=\"btn btn-primary\"\r\n                        onClick={() => {\r\n                        localStorage.setItem(\r\n                            \"savedDrawing\",\r\n                            //this.saveableCanvas.getSaveData(),\r\n                            this.ProcessDrawing()\r\n                        );\r\n                        }}> Save </button> \r\n                </div>\r\n                <div className=\"button-padding\">\r\n                    <button style={this.style} className=\"btn btn-primary\"\r\n                        onClick={() => {\r\n                        this.saveableCanvas.clear();\r\n                        }}> Clear </button>\r\n                </div>\r\n                <div className=\"button-padding\">\r\n                    <button style={this.style} className=\"btn btn-primary\"\r\n                        onClick={() => {\r\n                        this.saveableCanvas.undo();\r\n                        }}> Undo </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    RenderCanvas(){\r\n        return (\r\n            <div id=\"left\" width={this.state.width}>\r\n                <CanvasDraw \r\n                    ref={canvasDraw => (this.saveableCanvas = canvasDraw)}\r\n                    brushColor={this.state.brushColor}\r\n                    imgSrc={imageSrc}\r\n                    brushRadius={this.state.brushRadius}\r\n                    lazyRadius={this.state.lazyRadius}\r\n                    canvasWidth={this.state.width}\r\n                    canvasHeight={this.state.height}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    RenderResults(){\r\n        return (\r\n            <div id=\"right\">\r\n                <span className=\"badge badge-primary m-2\">Result: {this.state.result}</span>\r\n                <span className=\"badge badge-primary\">Accuracy: {this.state.accuracy}%</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    ProcessDrawing(){\r\n        //Process the drawing to back end and return output\r\n        const imageUri = this.saveableCanvas.canvasContainer.children[1].toDataURL(\"image/png\");\r\n        if (imageUri) {\r\n            const url = \"http://localhost:5000/process_image\";\r\n            fetch(url, {\r\n                method:\"POST\",\r\n                cache: \"no-store\",\r\n                headers:{\r\n                    'Accept': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\r\n                    'Access-Control-Request-Method': 'GET, POST, DELETE, PUT, OPTIONS'\r\n                },\r\n                body:JSON.stringify(imageUri)\r\n                }\r\n            ).then(response => {\r\n                console.log(response);\r\n                return response.json();\r\n            })\r\n            .then(contents => {\r\n                console.log(contents);\r\n            });\r\n            //.catch(() => console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser?\"))\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n\r\n                {this.RenderBrushSize()}\r\n                \r\n                <div id=\"container\">\r\n                    {this.RenderCanvas()}\r\n\r\n                    {this.RenderButtons()}\r\n\r\n                    {this.RenderResults()}\r\n                </div>\r\n\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}